========================================================================
    动态链接库：DataNode.EXE 项目概述
========================================================================


DataNode项目综述：
	本模块是一个框架程序。 即一个封装了数据采集接收模块、行情数据内存管理模块、数据压缩模块的socket服务框架(支持并发连接)。


模块设计特点：
	a) 通用多市场数据格式: 可用于所有市场,只需定制对应的“数据采集模块”，将数据以Type+Size+Body形式下发给本框架程序，以实现数据管理的通用性。
	b) 通用内存管理：通过内存数据库插件，对所有类型的行情数据格式进行统一管理。用Type+Size描述和分配所需的内存，动态分配查询各行情数据。
	c) 多市场初始化流程管理： 只需要通过配置文件，即可灵活的定制初始化“业务流程”。
	d) 支持定制的数据压缩: 通过挂载不同的“行情数据压缩模块”，进行多市场的数据压缩。


 /*****************DataNode服务框架************************************/
 /*                        /****************/                         */
 /*                        /*初始化管理逻辑*/                         */
 /*                        /****************/                         */
 /*                                                                   */ ===>级联Server(DataNode.EXE)
 /* /************/         /******************/      /**************/ */
 /* /*数据采集器*/-------->/*自适应内存库插件*/----->/*数据压缩插件*/ */
 /* /************/         /******************/      /**************/ */
 /*                                                                   */
 /*********************************************************************/


初始化流程管理：
	a) 程序入口: 通过调用 DataNodeService::Activate(), 初始化各资源对象 和 业务控制线程。
			    1) 资源对象：		对下网络服务框架；行情数据采集模块；内存数据插件；
			    2) 业务调试线程：	在Activate()函数完成后，程序的流程控制就完全由该线程独立调度。

	b) 业务调度线珵:
		流程：
			1) 先判断是否需要初始化，如果需要初始化，则进入步骤2)，否则进入步骤3)。
			2) 初始化流程：
			   a) 先从本地的历史存盘文件加载所有历史上行情数据到内存插件中。
			   b) 再初始化数据采集模块，从真实行情中更新覆盖真实行情到内存插件。
			   c) 将存盘文件商品代码集合 - 数据采集模块的商品代码集合 = 差集部分的商品代码，从内存插件中删除。
			3) 空闲处理业务:
			   a) 新链接到来时的全行情/增量行情推送。
			   b) 在交易时段内定时进行行情数据落盘操作。




/////////////////////////////////////////////////////////////////////////////







